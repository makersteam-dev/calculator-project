{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "window.Webflow ||= [];\r\nwindow.Webflow.push(() => {\r\n  // save all the inputs as variables\r\n  const marketingBudget: HTMLInputElement | null = document.querySelector<HTMLInputElement>(\r\n    'input#Total-Marketing-Budget'\r\n  );\r\n\r\n  const marketingTeamSize: HTMLInputElement | null = document.querySelector<HTMLInputElement>(\r\n    'input#Marketing-Team-Size'\r\n  );\r\n\r\n  // Save all the inputs as variables\r\n  const paidSearchInput: HTMLInputElement | null =\r\n    document.querySelector<HTMLInputElement>('input#paid-search');\r\n\r\n  const paidSocialInput: HTMLInputElement | null =\r\n    document.querySelector<HTMLInputElement>('input#paid-social');\r\n  const affiliatesInput: HTMLInputElement | null =\r\n    document.querySelector<HTMLInputElement>('input#affiliates');\r\n  const organicInput: HTMLInputElement | null =\r\n    document.querySelector<HTMLInputElement>('input#organic');\r\n  const otherInput: HTMLInputElement | null =\r\n    document.querySelector<HTMLInputElement>('input#other');\r\n\r\n  // Keep track of last checked input\r\n  let lastCheckedInput: HTMLInputElement | null = null;\r\n\r\n  // Add event listener to update otherInput value, check validity, and restrict input values\r\n  [paidSearchInput, paidSocialInput, affiliatesInput, organicInput].forEach((input) => {\r\n    if (input !== null) {\r\n      input.addEventListener('input', () => {\r\n        let paidSearch: number =\r\n          paidSearchInput !== null ? parseFloat(paidSearchInput.value) || 0 : 0;\r\n        let paidSocial: number =\r\n          paidSocialInput !== null ? parseFloat(paidSocialInput.value) || 0 : 0;\r\n        let affiliates: number =\r\n          affiliatesInput !== null ? parseFloat(affiliatesInput.value) || 0 : 0;\r\n        let organic: number = organicInput !== null ? parseFloat(organicInput.value) || 0 : 0;\r\n\r\n        // Restrict input values to be within 0 and 100\r\n        paidSearch = Math.min(Math.max(paidSearch, 0), 100);\r\n        paidSocial = Math.min(Math.max(paidSocial, 0), 100);\r\n        affiliates = Math.min(Math.max(affiliates, 0), 100);\r\n        organic = Math.min(Math.max(organic, 0), 100);\r\n\r\n        const totalValue: number = paidSearch + paidSocial + affiliates + organic;\r\n\r\n        if (totalValue > 100) {\r\n          // Reset last checked input value to 0\r\n          if (lastCheckedInput) {\r\n            lastCheckedInput.value = '0';\r\n            lastCheckedInput = null;\r\n          }\r\n          // Recalculate total value and remaining value\r\n          paidSearch = paidSearchInput !== null ? parseFloat(paidSearchInput.value) || 0 : 0;\r\n          paidSocial = paidSocialInput !== null ? parseFloat(paidSocialInput.value) || 0 : 0;\r\n          affiliates = affiliatesInput !== null ? parseFloat(affiliatesInput.value) || 0 : 0;\r\n          organic = organicInput !== null ? parseFloat(organicInput.value) || 0 : 0;\r\n\r\n          const remainingValue: number = 100 - (paidSearch + paidSocial + affiliates + organic);\r\n          if (otherInput !== null) {\r\n            otherInput.value = remainingValue.toString();\r\n          }\r\n        } else {\r\n          const remainingValue: number = 100 - totalValue;\r\n          if (otherInput !== null) {\r\n            otherInput.value = remainingValue.toString();\r\n          }\r\n          lastCheckedInput = input;\r\n        }\r\n\r\n        // Update input values after restriction\r\n        if (paidSearchInput !== null) {\r\n          paidSearchInput.value = paidSearch.toString();\r\n        }\r\n        if (paidSocialInput !== null) {\r\n          paidSocialInput.value = paidSocial.toString();\r\n        }\r\n        if (affiliatesInput !== null) {\r\n          affiliatesInput.value = affiliates.toString();\r\n        }\r\n        if (organicInput !== null) {\r\n          organicInput.value = organic.toString();\r\n        }\r\n\r\n        // Change label color based on input value\r\n        const parentWrap = input.parentElement?.parentElement;\r\n        const label = parentWrap?.querySelector('.is--calc-label') as HTMLElement;\r\n        if (parseFloat(input.value) > 0) {\r\n          label.style.color = '#DC56F2';\r\n        } else {\r\n          label.style.color = '#FFFFFF';\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  // Initialize input values to 0\r\n  window.addEventListener('load', () => {\r\n    if (paidSearchInput !== null) {\r\n      paidSearchInput.value = '0';\r\n    }\r\n    if (paidSocialInput !== null) {\r\n      paidSocialInput.value = '0';\r\n    }\r\n    if (affiliatesInput !== null) {\r\n      affiliatesInput.value = '0';\r\n    }\r\n    if (organicInput !== null) {\r\n      organicInput.value = '0';\r\n    }\r\n    if (otherInput !== null) {\r\n      otherInput.value = '0';\r\n    }\r\n\r\n    // Reset label colors on load\r\n    const labels = document.querySelectorAll('.is--calc-label');\r\n    labels.forEach((label) => {\r\n      (label as HTMLElement).style.color = '#FFFFFF';\r\n    });\r\n  });\r\n\r\n  const paidSearchSaving = 0.12;\r\n  const paidSocialSaving = 0.09;\r\n  const organicSaving = 0.05;\r\n  const affiliatesSaving = 0.08;\r\n  const managementConsultingSaving = 0.025;\r\n  const marketingAgencySaving = 0.012;\r\n  const costOfUsMarketingEmployee = 142700;\r\n  const hoursSaved = 0.28;\r\n  const resultElement: HTMLElement | null = document.querySelector('.final-value-text');\r\n\r\n  // checkboxes\r\n  const surveyToolsCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Survey-tools\"]'\r\n  );\r\n  const socialMonitoringCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Social-monitoring-tools\"]'\r\n  );\r\n  const crossChannelAttributionCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Cross-channel-attribution-tools\"]'\r\n  );\r\n  const competitiveIntelligenceCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Competitive-intelligence-tools\"]'\r\n  );\r\n  const marketingAgenciesCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Marketing-Agencies\"]'\r\n  );\r\n  const managementConsultingCheckbox: HTMLInputElement | null = document.querySelector(\r\n    'input[name=\"Management-Consulting\"]'\r\n  );\r\n\r\n  // Add event listener for surveyToolsCheckbox\r\n  surveyToolsCheckbox?.addEventListener('change', function (this: HTMLInputElement | null) {\r\n    if (this) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    }\r\n  });\r\n\r\n  // Add event listener for socialMonitoringCheckbox\r\n  socialMonitoringCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n    // Rest of the code...\r\n    this.checked ? '1' : '0';\r\n  });\r\n\r\n  // Add event listener for crossChannelAttributionCheckbox\r\n  crossChannelAttributionCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n    // Rest of the code...\r\n    this.checked ? '1' : '0';\r\n  });\r\n\r\n  // Add event listener for competitiveIntelligenceCheckbox\r\n  competitiveIntelligenceCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n    // Rest of the code...\r\n    this.checked ? '1' : '0';\r\n  });\r\n\r\n  // Add event listener for marketingAgenciesCheckbox\r\n  marketingAgenciesCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n    // Rest of the code...\r\n    this.checked ? '1' : '0';\r\n  });\r\n\r\n  // Add event listener for managementConsultingCheckbox\r\n  managementConsultingCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n    // Rest of the code...\r\n    this.checked ? '1' : '0';\r\n  });\r\n\r\n  // Add event listener for input changes\r\n  const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll('input');\r\n  function calculateValues() {\r\n    const marketingBudgetValue = marketingBudget !== null ? parseFloat(marketingBudget.value) : 0;\r\n    const marketingTeamSizeValue =\r\n      marketingTeamSize !== null ? parseFloat(marketingTeamSize.value) : 0;\r\n    const paidSearch = paidSearchInput !== null ? parseFloat(paidSearchInput.value) : 0;\r\n    const paidSocial = paidSocialInput !== null ? parseFloat(paidSocialInput.value) : 0;\r\n    const affiliates = affiliatesInput !== null ? parseFloat(affiliatesInput.value) : 0;\r\n    const organic = organicInput !== null ? parseFloat(organicInput.value) : 0;\r\n\r\n    const paidSearchPercentage = paidSearch / 100;\r\n    const paidSocialPercentage = paidSocial / 100;\r\n    const affiliatesPercentage = affiliates / 100;\r\n    const organicPercentage = organic / 100;\r\n    const surveyToolsCheckboxValue = surveyToolsCheckbox?.checked ? 1 : 0;\r\n    const socialMonitoringCheckboxValue = socialMonitoringCheckbox?.checked ? 1 : 0;\r\n    const crossChannelAttributionCheckboxValue = crossChannelAttributionCheckbox?.checked ? 1 : 0;\r\n    const competitiveIntelligenceCheckboxValue = competitiveIntelligenceCheckbox?.checked ? 1 : 0;\r\n    const marketingAgenciesCheckboxValue = marketingAgenciesCheckbox?.checked ? 1 : 0;\r\n    const managementConsultingCheckboxValue = managementConsultingCheckbox?.checked ? 1 : 0;\r\n\r\n    if (resultElement) {\r\n      const result =\r\n        marketingBudgetValue * paidSearchPercentage * paidSearchSaving +\r\n        marketingBudgetValue * paidSocialPercentage * paidSocialSaving +\r\n        marketingBudgetValue * affiliatesPercentage * affiliatesSaving +\r\n        marketingBudgetValue * organicPercentage * organicSaving +\r\n        competitiveIntelligenceCheckboxValue * 30000 +\r\n        surveyToolsCheckboxValue * 30000 +\r\n        socialMonitoringCheckboxValue * 30000 +\r\n        crossChannelAttributionCheckboxValue * 30000 +\r\n        managementConsultingCheckboxValue * managementConsultingSaving * marketingBudgetValue +\r\n        marketingAgenciesCheckboxValue * marketingAgencySaving * marketingBudgetValue +\r\n        marketingTeamSizeValue * hoursSaved * costOfUsMarketingEmployee;\r\n\r\n      resultElement.textContent = result.toLocaleString();\r\n    }\r\n  }\r\n  // Call calculateValues on window load\r\n  window.addEventListener('load', calculateValues);\r\n\r\n  // Call calculateValues whenever there is a change in any input\r\n  inputs.forEach(function (input) {\r\n    input.addEventListener('input', calculateValues);\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
