{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "window.Webflow ||= [];\r\nwindow.Webflow.push(() => {\r\n  window.Webflow ||= [];\r\n  window.Webflow.push(() => {\r\n    // save all the inputs as variables\r\n    const marketingBudget: HTMLInputElement | null = document.querySelector<HTMLInputElement>(\r\n      'input#Total-Marketing-Budget'\r\n    );\r\n\r\n    const marketingTeamSize: HTMLInputElement | null = document.querySelector<HTMLInputElement>(\r\n      'input#Marketing-Team-Size'\r\n    );\r\n\r\n    // Save all the inputs as variables\r\n    const paidSearchInput: HTMLInputElement | null =\r\n      document.querySelector<HTMLInputElement>('input#paid-search');\r\n\r\n    const paidSocialInput: HTMLInputElement | null =\r\n      document.querySelector<HTMLInputElement>('input#paid-social');\r\n    const affiliatesInput: HTMLInputElement | null =\r\n      document.querySelector<HTMLInputElement>('input#affiliates');\r\n    const organicInput: HTMLInputElement | null =\r\n      document.querySelector<HTMLInputElement>('input#organic');\r\n    const otherInput: HTMLInputElement | null =\r\n      document.querySelector<HTMLInputElement>('input#other');\r\n\r\n    // Keep track of last checked input\r\n    let lastCheckedInput: HTMLInputElement | null = null;\r\n\r\n    // Add event listener to update otherInput value, check validity, and restrict input values\r\n    [paidSearchInput, paidSocialInput, affiliatesInput, organicInput].forEach((input) => {\r\n      if (input !== null) {\r\n        input.addEventListener('input', () => {\r\n          let paidSearch: number =\r\n            paidSearchInput !== null ? parseFloat(paidSearchInput.value) || 0 : 0;\r\n          let paidSocial: number =\r\n            paidSocialInput !== null ? parseFloat(paidSocialInput.value) || 0 : 0;\r\n          let affiliates: number =\r\n            affiliatesInput !== null ? parseFloat(affiliatesInput.value) || 0 : 0;\r\n          let organic: number = organicInput !== null ? parseFloat(organicInput.value) || 0 : 0;\r\n\r\n          // Restrict input values to be within 0 and 100\r\n          paidSearch = Math.min(Math.max(paidSearch, 0), 100);\r\n          paidSocial = Math.min(Math.max(paidSocial, 0), 100);\r\n          affiliates = Math.min(Math.max(affiliates, 0), 100);\r\n          organic = Math.min(Math.max(organic, 0), 100);\r\n\r\n          const totalValue: number = paidSearch + paidSocial + affiliates + organic;\r\n\r\n          if (totalValue > 100) {\r\n            // Reset last checked input value to 0\r\n            if (lastCheckedInput) {\r\n              lastCheckedInput.value = '0';\r\n              lastCheckedInput = null;\r\n            }\r\n            // Recalculate total value and remaining value\r\n            paidSearch = paidSearchInput !== null ? parseFloat(paidSearchInput.value) || 0 : 0;\r\n            paidSocial = paidSocialInput !== null ? parseFloat(paidSocialInput.value) || 0 : 0;\r\n            affiliates = affiliatesInput !== null ? parseFloat(affiliatesInput.value) || 0 : 0;\r\n            organic = organicInput !== null ? parseFloat(organicInput.value) || 0 : 0;\r\n\r\n            const remainingValue: number = 100 - (paidSearch + paidSocial + affiliates + organic);\r\n            if (otherInput !== null) {\r\n              otherInput.value = remainingValue.toString();\r\n            }\r\n          } else {\r\n            const remainingValue: number = 100 - totalValue;\r\n            if (otherInput !== null) {\r\n              otherInput.value = remainingValue.toString();\r\n            }\r\n            lastCheckedInput = input;\r\n          }\r\n\r\n          // Update input values after restriction\r\n          if (paidSearchInput !== null) {\r\n            paidSearchInput.value = paidSearch.toString();\r\n          }\r\n          if (paidSocialInput !== null) {\r\n            paidSocialInput.value = paidSocial.toString();\r\n          }\r\n          if (affiliatesInput !== null) {\r\n            affiliatesInput.value = affiliates.toString();\r\n          }\r\n          if (organicInput !== null) {\r\n            organicInput.value = organic.toString();\r\n          }\r\n\r\n          // Change label color based on input value\r\n          const parentWrap = input.parentElement?.parentElement;\r\n          const label = parentWrap?.querySelector('.is--calc-label') as HTMLElement;\r\n          if (parseFloat(input.value) > 0) {\r\n            label.style.color = '#DC56F2';\r\n          } else {\r\n            label.style.color = '#FFFFFF';\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Initialize input values to 0\r\n    window.addEventListener('load', () => {\r\n      if (paidSearchInput !== null) {\r\n        paidSearchInput.value = '0';\r\n      }\r\n      if (paidSocialInput !== null) {\r\n        paidSocialInput.value = '0';\r\n      }\r\n      if (affiliatesInput !== null) {\r\n        affiliatesInput.value = '0';\r\n      }\r\n      if (organicInput !== null) {\r\n        organicInput.value = '0';\r\n      }\r\n      if (otherInput !== null) {\r\n        otherInput.value = '0';\r\n      }\r\n\r\n      // Reset label colors on load\r\n      const labels = document.querySelectorAll('.is--calc-label');\r\n      labels.forEach((label) => {\r\n        (label as HTMLElement).style.color = '#FFFFFF';\r\n      });\r\n    });\r\n\r\n    const paidSearchSaving = 0.12;\r\n    const paidSocialSaving = 0.09;\r\n    const organicSaving = 0.05;\r\n    const affiliatesSaving = 0.08;\r\n    const managementConsultingSaving = 0.025;\r\n    const marketingAgencySaving = 0.012;\r\n    const costOfUsMarketingEmployee = 142700;\r\n    const hoursSaved = 0.28;\r\n    const resultElement: HTMLElement | null = document.querySelector('.final-value-text');\r\n\r\n    // checkboxes\r\n    const surveyToolsCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Survey-tools\"]'\r\n    );\r\n    const socialMonitoringCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Social-monitoring-tools\"]'\r\n    );\r\n    const crossChannelAttributionCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Cross-channel-attribution-tools\"]'\r\n    );\r\n    const competitiveIntelligenceCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Competitive-intelligence-tools\"]'\r\n    );\r\n    const marketingAgenciesCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Marketing-Agencies\"]'\r\n    );\r\n    const managementConsultingCheckbox: HTMLInputElement | null = document.querySelector(\r\n      'input[name=\"Management-Consulting\"]'\r\n    );\r\n\r\n    // Add event listener for surveyToolsCheckbox\r\n    surveyToolsCheckbox?.addEventListener('change', function (this: HTMLInputElement | null) {\r\n      if (this) {\r\n        // Rest of the code...\r\n        this.checked ? '1' : '0';\r\n      }\r\n    });\r\n\r\n    // Add event listener for socialMonitoringCheckbox\r\n    socialMonitoringCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    });\r\n\r\n    // Add event listener for crossChannelAttributionCheckbox\r\n    crossChannelAttributionCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    });\r\n\r\n    // Add event listener for competitiveIntelligenceCheckbox\r\n    competitiveIntelligenceCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    });\r\n\r\n    // Add event listener for marketingAgenciesCheckbox\r\n    marketingAgenciesCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    });\r\n\r\n    // Add event listener for managementConsultingCheckbox\r\n    managementConsultingCheckbox?.addEventListener('change', function (this: HTMLInputElement) {\r\n      // Rest of the code...\r\n      this.checked ? '1' : '0';\r\n    });\r\n\r\n    // Add event listener for input changes\r\n    const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll('input');\r\n    function calculateValues() {\r\n      const marketingBudgetValue = marketingBudget !== null ? parseFloat(marketingBudget.value) : 0;\r\n      const marketingTeamSizeValue =\r\n        marketingTeamSize !== null ? parseFloat(marketingTeamSize.value) : 0;\r\n      const paidSearch = paidSearchInput !== null ? parseFloat(paidSearchInput.value) : 0;\r\n      const paidSocial = paidSocialInput !== null ? parseFloat(paidSocialInput.value) : 0;\r\n      const affiliates = affiliatesInput !== null ? parseFloat(affiliatesInput.value) : 0;\r\n      const organic = organicInput !== null ? parseFloat(organicInput.value) : 0;\r\n\r\n      const paidSearchPercentage = paidSearch / 100;\r\n      const paidSocialPercentage = paidSocial / 100;\r\n      const affiliatesPercentage = affiliates / 100;\r\n      const organicPercentage = organic / 100;\r\n      const surveyToolsCheckboxValue = surveyToolsCheckbox?.checked ? 1 : 0;\r\n      const socialMonitoringCheckboxValue = socialMonitoringCheckbox?.checked ? 1 : 0;\r\n      const crossChannelAttributionCheckboxValue = crossChannelAttributionCheckbox?.checked ? 1 : 0;\r\n      const competitiveIntelligenceCheckboxValue = competitiveIntelligenceCheckbox?.checked ? 1 : 0;\r\n      const marketingAgenciesCheckboxValue = marketingAgenciesCheckbox?.checked ? 1 : 0;\r\n      const managementConsultingCheckboxValue = managementConsultingCheckbox?.checked ? 1 : 0;\r\n\r\n      if (resultElement) {\r\n        const result =\r\n          marketingBudgetValue * paidSearchPercentage * paidSearchSaving +\r\n          marketingBudgetValue * paidSocialPercentage * paidSocialSaving +\r\n          marketingBudgetValue * affiliatesPercentage * affiliatesSaving +\r\n          marketingBudgetValue * organicPercentage * organicSaving +\r\n          competitiveIntelligenceCheckboxValue * 30000 +\r\n          surveyToolsCheckboxValue * 30000 +\r\n          socialMonitoringCheckboxValue * 30000 +\r\n          crossChannelAttributionCheckboxValue * 30000 +\r\n          managementConsultingCheckboxValue * managementConsultingSaving * marketingBudgetValue +\r\n          marketingAgenciesCheckboxValue * marketingAgencySaving * marketingBudgetValue +\r\n          marketingTeamSizeValue * hoursSaved * costOfUsMarketingEmployee;\r\n\r\n        resultElement.textContent = result.toLocaleString();\r\n      }\r\n    }\r\n    // Call calculateValues on window load\r\n    window.addEventListener('load', calculateValues);\r\n\r\n    // Call calculateValues whenever there is a change in any input\r\n    inputs.forEach(function (input) {\r\n      input.addEventListener('input', calculateValues);\r\n    });\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
